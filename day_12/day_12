#!/bin/bash

ALLOW_REENTER=${1-0}
INPUT=${2-aoc.input}

declare -A GRAPH
declare -a AOC_PATH
declare -A AOC_PATH_NODES
declare -A AOC_MULTI_NODE
PATH_COUNT=0
SPIN=0
function spin() {
  local spinner="/-\|"
  echo -en "\033[D"
  printf "%s" "${spinner:${SPIN}:1}"
  (( SPIN = (SPIN + 1) % ${#spinner} ))
}

function findPath() {
  local first_node=$1
  local next_node
  local reentered=0
  AOC_PATH+=( ${first_node} )
  (( AOC_PATH_NODES[${first_node}] += 1 ))
  for next_node in ${GRAPH[${first_node}]}; do
    spin
    if [ ${next_node} == "end" ]; then
      (( PATH_COUNT += 1 ))
      continue
    fi
    if [ ${next_node} == "start" ]; then
      continue
    fi
    if [ ${AOC_MULTI_NODE[${next_node}]-0} -eq 0 -a ${AOC_PATH_NODES[${next_node}]-0} -gt 0 ]; then
      if [ ${ALLOW_REENTER} -eq 0 -o ! -z "${HAS_REENTERED}" ]; then
        continue
      fi
    fi
    if [ ${AOC_MULTI_NODE[${next_node}]-0} -eq 0 -a ${AOC_PATH_NODES[${next_node}]-0} -gt 0 ]; then
      reentered=1
      HAS_REENTERED=${next_node}
    fi
    findPath ${next_node}
    if [ ${reentered} -eq 1 ]; then
      HAS_REENTERED=""
      reenetered=0
    fi
  done
  (( AOC_PATH_NODES[${first_node}] -= 1 ))
  unset AOC_PATH[-1]
}

while read line
do
  start=${line%-*}
  end=${line#*-}
  GRAPH[${start}]+="${end} "
  GRAPH[${end}]+="${start} "
  if [ ${start} == ${start^^} ]; then
    AOC_MULTI_NODE[${start}]=1
  fi
  if [ ${end} == ${end^^} ]; then
    AOC_MULTI_NODE[${end}]=1
  fi
  AOC_PATH_NODES[${start}]=0
  AOC_PATH_NODES[${end}]=0
done < "${INPUT}"
findPath start
echo -ne "\033[1D"
echo ${PATH_COUNT}

