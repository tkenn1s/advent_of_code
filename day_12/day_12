#!/bin/bash

ALLOW_REENTER=${1-0}
INPUT=${2-aoc.input}

declare -A GRAPH
declare -a AOC_PATH
PATH_COUNT=0
SPIN=0
function spin() {
  local spinner="/-\|"
  echo -en "\033[D"
  printf "%s" "${spinner:${SPIN}:1}"
  (( SPIN = (SPIN + 1) % ${#spinner} ))
}

function isMultiNode() {
  local node=$1
  if [ ${node} == ${node^^} ]; then
    return 1
  else
    return 0
  fi
}

function pathContainsNode() {
  local node=$1
  local path_node
  for path_node in ${AOC_PATH[@]}; do
    if [ ${path_node} == ${node} ]; then
      return 1
    fi
  done
  return 0
}

function isReenteredNode() {
  local node=$1
  isMultiNode ${node}
  local is_multi=$?
  if [ ${is_multi} -eq 1 ]; then
    return 0
  fi
  pathContainsNode ${node}
  local contains_node=$?
  return ${contains_node}
}

function canEnterCave() {
  local node=$1
  if [ ${node} == "start" ]; then
    return 0
  fi
  isMultiNode ${node}
  local is_multi=$?
  if [ ${is_multi} -eq 1 ]; then
    return 1
  fi
  pathContainsNode ${node}
  local contains_node=$?
  if [ ${contains_node} -eq 1 ]; then
     if [ ${ALLOW_REENTER} -eq 1 -a -z "${HAS_REENTERED}" ]; then
       return 1
     fi
     return 0
  fi
  return 1
}

function findPath() {
  local first_node=$1
  declare -a nodes
  IFS=',' read -r -a nodes <<< ${GRAPH[${first_node}]} 
  local next_node
  local reentered=0
    AOC_PATH+=( ${first_node} )
  for next_node in ${nodes[@]}; do
    spin
    if [ ${next_node} == "end" ]; then
      (( PATH_COUNT += 1 ))
      continue
    fi
    canEnterCave ${next_node}
    if [ $? -eq 0 ]; then
      continue
    fi
    isReenteredNode ${next_node}
    if [ $? -eq 1 ]; then
      reentered=1
      HAS_REENTERED=${next_node}
    fi
    findPath ${next_node}
    if [ ${reentered} -eq 1 ]; then
      unset HAS_REENTERED
      reenetered=0
    fi
  done
  unset AOC_PATH[-1]
}

while read line
do
  start=${line%-*}
  end=${line#*-}
  GRAPH[${start}]+=",${end}"
  GRAPH[${end}]+=",${start}"
done < "${INPUT}"
for node in ${!GRAPH[@]}; do
  GRAPH[${node}]=$( echo "${GRAPH[${node}]}" | cut -d, -f2- )
done
findPath start
echo -ne "\033[1D"
echo ${PATH_COUNT}

