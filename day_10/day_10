#!/bin/bash

CALCULATE_INCOMPLETE=${1-0}
INPUT=${2-aoc.input}

declare -a GRID
SPIN=0
function spin() {
  local spinner="/-\|"
  echo -en "\033[D"
  printf "%s" "${spinner:${SPIN}:1}"
  (( SPIN = (SPIN + 1) % ${#spinner} ))
}

invalid_score=0
SCORES=()
while read line
do
  spin
  incomplete_score=0
  BRACE=()
  stop=0
  for (( i = 0; i < ${#line}; i++ )); do
    ch=${line:${i}:1}
    case ${ch} in
      "("|"["|"{"|"<") 
        BRACE+=( ${ch} )
        ;;
      ")") 
        if [ ${BRACE[-1]} != "(" ]; then
          (( invalid_score += 3 ))
          stop=1
          break
        fi
        unset BRACE[-1]
        ;;
      "]") 
        if [ ${BRACE[-1]} != "[" ]; then
          (( invalid_score += 57 ))
          stop=1
          break
        fi
        unset BRACE[-1]
        ;;
      "}") 
        if [ ${BRACE[-1]} != "{" ]; then
          (( invalid_score += 1197 ))
          stop=1
          break
        fi
        unset BRACE[-1]
        ;;
      ">") 
        if [ ${BRACE[-1]} != "<" ]; then
          (( invalid_score += 25137 ))
          stop=1
          break
        fi
        unset BRACE[-1]
        ;;
    esac
  done
  if [ ${stop} -eq 1 ]; then
    continue
  fi
  while [ ${#BRACE} -gt 0 ]; do
    (( incomplete_score *= 5 ))
    case ${BRACE[-1]} in
      "(")
        (( incomplete_score += 1 ))
        ;;
      "[")
        (( incomplete_score += 2 ))
        ;;
      "{")
        (( incomplete_score += 3 ))
        ;;
      "<") 
        (( incomplete_score += 4 ))
        ;;
    esac
    unset BRACE[-1]
  done
  SCORES+=( ${incomplete_score} )
done < "${INPUT}"
echo -ne "\033[1D"
if [ ${CALCULATE_INCOMPLETE} -eq 0 ]; then
  echo ${invalid_score}
else
  sorted=$( printf '%d\n' ${SCORES[@]} | sort -n | paste -sd, )
  IFS=',' read -r -a SCORES <<< ${sorted}
  echo ${SCORES[$(( ${#SCORES[@]} / 2))]}
fi

