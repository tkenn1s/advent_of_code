#!/bin/bash

INPUT=$1
if [ -z "${INPUT}" ]; then
  INPUT=aoc.input
fi

declare -a WINNING_BOARD
declare -a BOARDS_REMOVED

SPIN=0
function spin() {
  local spinner="/-\|"
  echo -en "\033[$1D"
  printf "%s" "${spinner:${SPIN}:1}"
  (( SPIN = (SPIN + 1) % ${#spinner} ))
}

function markNumber() {
  local num=${1}
  local board
  for (( board=0; board < ${NUM_BOARDS}; board++ )); do
    if [ 1 -eq ${WINNING_BOARD[${board}]-0} ]; then
      continue
    fi
    local row
    for (( row=0; row < 5; row++ )); do
      local col
      for (( col=0; col < 5; col++ )); do
        eval local element=\${BOARD_${board}_${row}[${col}]}
        if [ "xx" = "${element}" ]; then
          continue
        fi
        if [ ${element} -eq ${num} ]; then
          eval BOARD_${board}_${row}[${col}]=\"xx\"
        fi
      done
    done
  done
}

function removeWinningBoard() {
  local board
  local idx=0
  BOARDS_REMOVED=()
  for (( board=0; board < ${NUM_BOARDS}; board++ )); do
    if [ 1 -eq ${WINNING_BOARD[${board}]-0} ]; then
      continue
    fi
    local row
    for (( row=0; row < 5; row++ )); do
      eval local columns=\${BOARD_${board}_${row}[@]}
      if [ "xx xx xx xx xx" = "${columns}" ]; then
        WINNING_BOARD[${board}]=1
        BOARDS_REMOVED[${idx}]=${board}
        (( idx++ ))
      fi
    done
    local col
    for (( col=0; col < 5; col++ )); do
      local is_winner=1
      local row
      for (( row=0; row < 5; row++ )); do
        eval local element=\${BOARD_${board}_${row}[${col}]}
        if [ "xx" != "${element}" ]; then
          is_winner=0
          break
        fi
      done
      if [ ${is_winner} -eq 1 ]; then
        WINNING_BOARD[${board}]=1
        BOARDS_REMOVED[${idx}]=${board}
        (( idx++ ))
      fi
    done
  done
  return ${#BOARDS_REMOVED}
}

function sumBoard() {
  local board=${1}
  local sum=0
  local row
  for (( row=0; row < 5; row++ )); do
    local col
    for (( col=0; col < 5; col++ )); do
      eval local element=\${BOARD_${board}_${row}[${col}]}
      if [ "xx" != "${element}" ]; then
        (( sum += element ))
      fi
    done
  done
  echo ${sum}
}

function availableBoards() {
  local available=0
  local board
  for (( board=0; board < ${NUM_BOARDS}; board++ )); do
    if [ 1 -eq ${WINNING_BOARD[${board}]-0} ]; then
      continue
    fi
    (( available++ ))
  done
  echo ${available}
}

BoardIdx=-1
row=0
bingo=""
while read line
do
  if [ "$line" = "" ]; then
    (( BoardIdx++ ))
    row=0
  else
    if [ ${BoardIdx} -eq -1 ]; then
      bingo=${line}
      continue
    fi
    col=0
    for element in ${line}; do
      eval BOARD_${BoardIdx}_${row}[${col}]=${element}
      (( col++ ))
    done
    (( row++ ))
  fi
done < "${INPUT}"

(( NUM_BOARDS=${BoardIdx} + 1 ))

IFS=, read -ra numbers <<< ${bingo}
for draw in ${numbers[@]}; do
  spin
  markNumber ${draw}
  removeWinningBoard
  boardRemoved=$?
  available=$( availableBoards )
  if [ ${boardRemoved} -gt 0 -a 0 -eq ${available} ]; then
    echo
    echo "$( sumBoard ${BOARDS_REMOVED[0]} ) * ${draw}" | bc
    break;
  fi
done
