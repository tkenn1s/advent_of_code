#!/bin/bash

FIND_BASINS=${1-0}
INPUT=${2-aoc.input}

declare -a GRID
SPIN=0
function spin() {
  local spinner="/-\|"
  echo -en "\033[D"
  printf "%s" "${spinner:${SPIN}:1}"
  (( SPIN = (SPIN + 1) % ${#spinner} ))
}

function getBasinSize() {
  spin
  local x=$1
  local y=$2
  local size=$3
  if [ ${x} -lt 0 -o ${y} -lt 0 -o ${x} -ge ${#GRID[0]} -o ${y} -ge ${#GRID[@]} ]; then
    return ${size}
  fi
  local row=${GRID[${y}]}
  if [ ${row:${x}:1} -eq 9 ]; then
    return ${size}
  fi
  row=${row:0:${x}}9${row:$(( x + 1 ))}
  GRID[${y}]=${row}
  getBasinSize $(( ${x} + 1 )) ${y} $(( size + 1 ))
  getBasinSize ${x} $(( ${y} + 1 )) $?
  getBasinSize $(( ${x} - 1 )) ${y} $?
  getBasinSize ${x} $(( ${y} - 1 )) $?
}

function getDigit() {
  local x=$1
  local y=$2
  if [ ${x} -lt 0 -o ${y} -lt 0 -o ${x} -ge ${#GRID[0]} -o ${y} -ge ${#GRID[@]} ]; then
    return 9
  fi
  return ${GRID[${y}]:${x}:1}
}

function findLow() {
  spin
  local x=$1
  local y=$2
  getDigit ${x} ${y}
  local number=$?
  getDigit ${x} $(( ${y} - 1 ))
  if [ ${number} -ge $? ]; then
    return 0
  fi
  getDigit $(( ${x} - 1 )) ${y}
  if [ ${number} -ge $? ]; then
    return 0
  fi
  getDigit $(( ${x} + 1 )) ${y}
  if [ ${number} -ge $? ]; then
    return 0
  fi
  getDigit ${x} $(( y + 1 ))
  if [ ${number} -ge $? ]; then
    return 0
  fi
  return $(( number + 1 ))
}

while read line
do
  GRID+=( ${line} )
done < "${INPUT}"

value=()
for (( i = 0; i < ${#GRID[@]}; i++ )); do
  for (( j = 0; j < ${#GRID[0]}; j++ )); do
    if [ ${GRID[${i}]:${j}:1} -eq 9 ]; then
      continue
    fi
    if [ ${FIND_BASINS} -eq 0 ]; then
      findLow ${j} ${i}
    else
      getBasinSize ${j} ${i} 0
    fi
    result=$?
    if [ ${result} -gt 0 ]; then
      values+=( ${result} )
    fi
  done
done

echo -ne "\033[1D"
if [ ${FIND_BASINS} -eq 0 ]; then
  printf '%d\n' ${values[@]} | sort -n | paste -sd+ | bc -l
else
  printf '%d\n' ${values[@]} | sort -n | tail -3 | paste -sd\* | bc -l
fi

