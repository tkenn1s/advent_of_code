#!/bin/bash

EXPONENTIAL=${1-0}
INPUT=${2-aoc.input}

function getMean() {
  local total=$( printf '%d\n' ${CRABS[@]} | paste -sd+ | bc -l )
  (( total /= ${#CRABS[@]} ))
  echo ${total}
}

function getMedian() {
  if (( ${#CRABS[@]} % 2 == 0 )); then
    echo $(( (${CRABS[$(( ${#CRABS[@]} / 2 ))]} + ${CRABS[$(( (${#CRABS[@]} / 2) - 1 ))]}) / 2 ))
  else
    echo ${CRABS[$(( ${#CRABS[@]} / 2 ))]}
  fi
}

function sumToN() {
  echo $(( $1 * ($1 + 1) / 2 ))
}

function calculateFuel() {
  local position=$1
  local cnt=0
  local crab
  local fuel
  for crab in ${CRABS[@]}; do
    (( fuel = position - crab ))
    if [ ${EXPONENTIAL} -eq 0 ]; then
      (( cnt += ${fuel#-} ))
    else
      (( cnt += $( sumToN ${fuel#-} ) ))
    fi
  done
  echo ${cnt}
}

IFS=', ' read -r -a CRABS < ${INPUT}
CRABS=( $( printf '%d\n' ${CRABS[@]} | sort -n ) )
if [ ${EXPONENTIAL} -eq 0 ]; then
  echo $( calculateFuel $( getMedian ) )
elif [ ${EXPONENTIAL} -eq 2 ]; then
  left=${CRABS[0]}
  right=${CRABS[$(( ${#CRABS[@]} - 1 ))]}
  while :; do
    (( middle = left + ( (right - left) / 2) ))
    if [ $( calculateFuel ${left} ) -lt $( calculateFuel ${right} ) ]; then
      right=${middle}
    else
      left=${middle}
    fi

    if [ $(( left + 1 )) -ge ${right} ]; then
      fuel1=$( calculateFuel ${left} )
      fuel2=$( calculateFuel ${right} )
      if [ ${fuel1} -lt ${fuel2} ]; then
        echo "${left}; ${fuel1}"
      else
        echo "${right}; ${fuel2}"
     fi
      break
    fi
  done
else
  # Solution can be either floor(mean) or ceil(mean)
  # see: https://www.reddit.com/r/adventofcode/comments/rawxad/2021_day_7_part_2_i_wrote_a_paper_on_todays/
  mean=$( getMean )
  fuel1=$( calculateFuel ${mean} )
  fuel2=$( calculateFuel $(( mean + 1 )) )
  if [ ${fuel1} -lt ${fuel2} ]; then
    echo ${fuel1}
  else
    echo ${fuel2}
  fi
fi
